<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd">



    <!-- 로그인 및 로그아웃에 대한 권한(Authorization) 처리  -->
    <security:http>
        <security:form-login login-page="/login"/>
<!-- /logout 에 대해 반드시 post 방식으로 요청해야한다       -->
        <security:logout logout-url="/logout" invalidate-session="true" logout-success-url="/login"/>

        <!--    게시판 목록 : ROLE_USER 이상
                게시판 글 등록 : ROLE_MEMBER 이상
                게시판 글 삭제 : ROLE_MANAGER 이상
                전체 모든 권한 : ROLE_ADMIN
        -->
        <security:intercept-url pattern="/board/list" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/board/add" access="hasRole('ROLE_MEMBER')"/>
        <security:intercept-url pattern="/board/delete" access="hasRole('ROLE_MANAGER')"/>
    </security:http>

    <!--    접근(Authentication)과 권한(Authorization) 사용자 관리 -->
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <!-- 권한은 ROLE_ 로 시작하는 단어로 적어준다 -->
                <!-- noop(no operation) 암호화를 하지 않도록 함-->
                <security:user name="admin" password="{noop}1234" authorities="ROLE_USER, ROLE_MEMBER, ROLE_MANAGER, ROLE_ADMIN"/>
                <security:user name="caps" password="{noop}1234" authorities="ROLE_USER, ROLE_MEMBER, ROLE_MANAGER"/>
                <security:user name="bin" password="{noop}1234" authorities="ROLE_USER, ROLE_MEMBER"/>
                <security:user name="ruler" password="{noop}1234" authorities="ROLE_USER"/>
                <security:user name="faker" password="{noop}1234" authorities="ROLE_GOAT"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>
</beans>